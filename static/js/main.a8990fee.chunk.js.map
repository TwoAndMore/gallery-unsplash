{"version":3,"sources":["components/Loader/Loader.tsx","components/PhotoItem/PhotoItem.tsx","components/Gallery/Gallery.tsx","utils/fetchClient.ts","App.tsx","api/photos.ts","index.tsx"],"names":["Loader","className","PhotoItem","props","id","image","title","authorName","authorPicture","selectPhoto","to","type","onClick","src","alt","Gallery","photos","isLoading","isError","useState","currentPhotoID","setCurrentPhotoID","useParams","photoID","getPhotoByID","photoId","find","photo","handleSelectPhoto","foundPhoto","useEffect","length","map","urls","user","description","small","name","profile_image","full","BASE_URL","client","get","url","fullURL","fetch","then","res","json","App","setPhotos","setIsError","setIsLoading","catch","finally","path","index","element","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8990fee.chunk.js","sourcesContent":["import './Loader.scss';\nimport React from 'react';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import './PhotoItem.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  id: string,\n  image: string,\n  title: string,\n  authorName: string,\n  authorPicture: string,\n  selectPhoto: (photoID: string) => void,\n};\n\nexport const PhotoItem: React.FC<Props> = (props) => {\n  const {\n    id,\n    image,\n    title,\n    authorName,\n    authorPicture,\n    selectPhoto,\n  } = props;\n\n  return (\n    <div className=\"photoItem\">\n      <Link to={`/${id}`}>\n        <button\n          className=\"photoItem__photo\"\n          type=\"button\"\n          onClick={() => selectPhoto(id)}\n        >\n          <img\n            src={image}\n            alt={title}\n            className=\"photoItem__image\"\n          />\n        </button>\n      </Link>\n\n      <div className=\"photoItem__line\" />\n\n      <div className=\"photoItem__title\">\n        {title}\n      </div>\n\n      <div className=\"photoItem__author\">\n        <div className=\"photoItem__author-photo\">\n          <img\n            src={authorPicture}\n            alt={authorName}\n            className=\"photoItem__author-image\"\n          />\n        </div>\n        <div className=\"photoItem__author-name\">\n          {authorName}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './Gallery.scss';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { Photo } from '../../types/Photo';\nimport { Loader } from '../Loader/Loader';\nimport { PhotoItem } from '../PhotoItem/PhotoItem';\n\ntype Props = {\n  photos: Photo[],\n  isLoading: boolean,\n  isError: boolean,\n};\n\nexport const Gallery: React.FC<Props> = (props) => {\n  const {\n    photos,\n    isLoading,\n    isError,\n  } = props;\n\n  const [currentPhotoID, setCurrentPhotoID] = useState<string | null>(null);\n  const { photoID = '' } = useParams();\n\n  const handleClosePhoto = () => {\n    setCurrentPhotoID(null);\n  };\n\n  const getPhotoByID = (photoId: string) => {\n    return photos.find(photo => photo.id === photoId) || photos[0] || null;\n  };\n\n  const handleSelectPhoto = (photoId: string) => {\n    const foundPhoto = getPhotoByID(photoId);\n\n    if (foundPhoto) {\n      setCurrentPhotoID(foundPhoto.id);\n    }\n  };\n\n  useEffect(() => {\n    if (photoID.length > 0) {\n      handleSelectPhoto(photoID);\n    }\n  });\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {isError || photos.length <= 0 ? (\n            <p>\n              Cant load data from server / There is no data\n            </p>\n          ) : (\n            <div className=\"gallery\">\n              <h1 className=\"gallery__title\">\n                Gallery\n              </h1>\n\n              <div className=\"gallery__list\">\n                {photos.map(photo => {\n                  const {\n                    urls,\n                    user,\n                    description,\n                    id,\n                  } = photo;\n\n                  return (\n                    <PhotoItem\n                      id={id}\n                      image={urls.small}\n                      title={description}\n                      authorName={user.name}\n                      authorPicture={user.profile_image.small}\n                      selectPhoto={handleSelectPhoto}\n                      key={id}\n                    />\n                  );\n                })}\n              </div>\n\n              {currentPhotoID && (\n                <div className=\"gallery__full\">\n                  <img\n                    src={getPhotoByID(currentPhotoID).urls.full}\n                    alt={getPhotoByID(currentPhotoID).description}\n                    className=\"gallery__opened-photo\"\n                  />\n                  <Link to=\"/\">\n                    <button\n                      type=\"button\"\n                      className=\"gallery__close\"\n                      onClick={handleClosePhoto}\n                    >\n                      X\n                    </button>\n                  </Link>\n                </div>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","const TOKEN = '896d4f52c589547b2134bd75ed48742db637fa51810b49b607e37e46ab2c0043';\nconst BASE_URL = `https://api.unsplash.com/photos/?client_id=${TOKEN}`;\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL}${url}`;\n\n  return fetch(fullURL)\n    .then(res => res.json());\n}\n\nexport const client = {\n  get,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router';\nimport { Gallery } from './components/Gallery/Gallery';\nimport { getPhotos } from './api/photos';\nimport { Photo } from './types/Photo';\n\nexport const App: React.FC = () => {\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPhotos()\n      .then(res => setPhotos(res))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"main page\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\">\n            <Route\n              index\n              element={(\n                <Gallery\n                  photos={photos}\n                  isLoading={isLoading}\n                  isError={isError}\n                />\n              )}\n            />\n\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route\n              path=\":photoID\"\n              element={(\n                <Gallery\n                  photos={photos}\n                  isLoading={isLoading}\n                  isError={isError}\n                />\n              )}\n            />\n          </Route>\n\n          <Route path=\"*\" element={<h1>Error :(</h1>} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n","import { Photo } from '../types/Photo';\nimport { client } from '../utils/fetchClient';\n\nexport const getPhotos = () => client.get<Photo[]>('');\n// export const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}